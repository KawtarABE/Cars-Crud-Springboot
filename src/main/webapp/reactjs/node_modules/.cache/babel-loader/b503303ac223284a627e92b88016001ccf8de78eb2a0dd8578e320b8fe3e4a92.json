{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form, Col, Button, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo, faSave, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport MyToast from './MyToast';\nimport { useParams } from 'react-router-dom'; // Import useParams\n\nfunction EditVoiture() {\n  _s();\n  const {\n    id\n  } = useParams(); // Retrieve id from route parameters\n  const [marque, setMarque] = useState('');\n  const [modele, setModele] = useState('');\n  const [couleur, setCouleur] = useState('');\n  const [immatricule, setImmatricule] = useState('');\n  const [annee, setAnnee] = useState('');\n  const [prix, setPrix] = useState('');\n  const [show, setShow] = useState(false);\n  const [toastType, setToastType] = useState('');\n  useEffect(() => {\n    // Fetch data for the given ID and set state values\n    if (id) {\n      axios.get(`http://localhost:8080/voitures/${id}`).then(response => {\n        if (response.data) {\n          const {\n            marque,\n            modele,\n            couleur,\n            immatricule,\n            annee,\n            prix\n          } = response.data;\n          setMarque(marque);\n          setModele(modele);\n          setCouleur(couleur);\n          setImmatricule(immatricule);\n          setAnnee(annee);\n          setPrix(prix);\n        }\n      });\n    }\n  }, [id]);\n\n  // Rest of your component code\n}\n_s(EditVoiture, \"0cwHFq/zOMdPEVBta2rXmOjoYgA=\", false, function () {\n  return [useParams];\n});\n_c = EditVoiture;\nvar _c;\n$RefreshReg$(_c, \"EditVoiture\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","Col","Button","Row","FontAwesomeIcon","faUndo","faSave","faPlusSquare","axios","MyToast","useParams","EditVoiture","_s","id","marque","setMarque","modele","setModele","couleur","setCouleur","immatricule","setImmatricule","annee","setAnnee","prix","setPrix","show","setShow","toastType","setToastType","get","then","response","data","_c","$RefreshReg$"],"sources":["C:/Users/Kawtar/Downloads/demo/demo/src/main/webapp/reactjs/src/Components/EditVoiture.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Form, Col, Button, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndo, faSave, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport MyToast from './MyToast';\r\nimport { useParams } from 'react-router-dom'; // Import useParams\r\n\r\nfunction EditVoiture() {\r\n  const { id } = useParams(); // Retrieve id from route parameters\r\n  const [marque, setMarque] = useState('');\r\n  const [modele, setModele] = useState('');\r\n  const [couleur, setCouleur] = useState('');\r\n  const [immatricule, setImmatricule] = useState('');\r\n  const [annee, setAnnee] = useState('');\r\n  const [prix, setPrix] = useState('');\r\n  const [show, setShow] = useState(false);\r\n  const [toastType, setToastType] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch data for the given ID and set state values\r\n    if (id) {\r\n      axios.get(`http://localhost:8080/voitures/${id}`)\r\n        .then((response) => {\r\n          if (response.data) {\r\n            const { marque, modele, couleur, immatricule, annee, prix } = response.data;\r\n            setMarque(marque);\r\n            setModele(modele);\r\n            setCouleur(couleur);\r\n            setImmatricule(immatricule);\r\n            setAnnee(annee);\r\n            setPrix(prix);\r\n          }\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  // Rest of your component code\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,GAAG,QAAQ,iBAAiB;AAC9D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,EAAEC,MAAM,EAAEC,YAAY,QAAQ,mCAAmC;AAChF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;;AAE9C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGH,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC6B,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,IAAIe,EAAE,EAAE;MACNL,KAAK,CAACsB,GAAG,CAAE,kCAAiCjB,EAAG,EAAC,CAAC,CAC9CkB,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,IAAI,EAAE;UACjB,MAAM;YAAEnB,MAAM;YAAEE,MAAM;YAAEE,OAAO;YAAEE,WAAW;YAAEE,KAAK;YAAEE;UAAK,CAAC,GAAGQ,QAAQ,CAACC,IAAI;UAC3ElB,SAAS,CAACD,MAAM,CAAC;UACjBG,SAAS,CAACD,MAAM,CAAC;UACjBG,UAAU,CAACD,OAAO,CAAC;UACnBG,cAAc,CAACD,WAAW,CAAC;UAC3BG,QAAQ,CAACD,KAAK,CAAC;UACfG,OAAO,CAACD,IAAI,CAAC;QACf;MACF,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACX,EAAE,CAAC,CAAC;;EAER;AACF;AAACD,EAAA,CA9BQD,WAAW;EAAA,QACHD,SAAS;AAAA;AAAAwB,EAAA,GADjBvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}